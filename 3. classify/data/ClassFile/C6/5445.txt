&nbsp; 
　　掌握好上机考试的应试技巧，可以使考生的实际水平在考试时得到充分发挥，从而取得较为理想的成绩。历次考试均有考生因为忽略了这一点，加之较为紧张的考场气氛影响了水平的发挥，致使考试成绩大大低于实际水平。因此每个考生在应试前，都应有充分的准备。
　　下面是本人从历次考试实践中总结出来的几点经验，提供大家参考：
　　一．熟悉考试场地及环境，尤其要熟悉考场的硬件情况和所使用的相关软件的情况。
　　对考场的情况应充分熟悉，以免临场影响情绪（个别考生甚至出现手足无措的情况）。例如，考场使用的计算机你是否熟悉？如何开机，如何进入考试系统都是应该熟练掌握的。
　　键盘的手感如何？如果键盘的手感不好，应想办法增加练习机会，尽可能使不舒适感减少。否则考试时不仅影响速度，更影响情绪。
　　对考试系统所使用的汉字系统UCDOS你是否熟悉，如果不熟悉，应练习并熟悉之。你所习惯使用的汉字输入法是否加载了？如果没有加载，应与考场工作人员或负责人联系，由他们告诉加载方法。个别输入法可能还需考试工作人员加装相应软件，因此一定要在考试前准备好。
　　你所考的语言考场是使用的什么版本，如何调用，也应考前就弄清楚并熟悉之。这方面考FoxBASE和QBASIC语言的一般问题不大，因为这两种语言考试系统的要求比较统一，各考场比较一致。而FORTRAN、C、Pascal语言随版本的高低有较大的区别。一般讲，低版本没有帮助系统（FORTRAN）或帮助系统过于简单，而高版本有较全面的帮助系统。因此，用惯了高版本的考生在使用低版本软件时，往往因为无法求助而困惑；而用惯了低版本软件的考生又往往不熟悉高版本软件的使用界面。如果考场所使用的软件是你所不熟悉的，一定要想办法迅速熟悉起来。
　　补充：不要错过参加模拟考试的机会
　　考点在正式考试前，会给考生提供一次模拟上机的机会，并且一般会有指导老师回答考生的疑问。模拟上机除考题只有一套，并且可以提问外，其他与正式考试完全一样。有些考生本来就准备不足，模拟上机又不到，结果实际考试时完全找不着北。模拟考试时重点不应放在把题做出来，而是放在熟悉考试环境，相应软件的使用方法，考试系统的使用技巧等方面。并应多向指导教师请教技巧。这些在正式考试时是没有机会的。
　　二．学会并习惯使用帮助系统
　　QBASIC、turbo C 
2.0、FoxBASE+2.1、vb、vf都有较全面的帮助系统。熟练掌握之，可以减少记忆量，解决解题中的疑难问题。
　　比如，1998年下半年和2001年下半年的二级C语言的编程题都有这样一题：
　　请编写一个函数 fun ( char *s )，函数的功能是把 s 串中的内容逆置。
　　例如：s 串中原有的字符串为：abcdefg，则调用该函数后，
　　s 串中的内容为：gfedcba。
　　注意: 部分源程序存在文件PROG1.C文件中。
　　请勿改动主函数main和其它函数中的任何内容，仅在函数fun的花括号中填入你编写的若干语句。
　　……
　　fun ( char *s )
　　{
　　}
　　……
　　如果你对字符串的逆置函数有点印象，就可通过帮助系统很快找到它。这样，这个程序只需添加一条语句 strrev(s) 
就完成了，比自己编这个函数简单多了。当然，如果考场使用的是turbo C 2.0，那你就只好自己努力记忆了。
　　顺便提一下，学会熟练使用帮助系统不仅对考试有好处，对实际使用各种软件都大有益处。现在的新软件层出不穷，而且功能复杂，使用时必须依靠强大的帮助功能才能迅速掌握并充分发挥其功能，不会使用帮助系统而要用好任意一款较大的软件几乎是不可想象的。
　　三．上机做题时应注意的事项
　　上机考试的评分是以机评为主，人工复查为辅的。机评当然不存在公正性的问题，但却存在呆板的问题，有时还可能因为出题者考虑不周出现错评的情况。考生做题时不充分考虑到这些情况，也可能吃亏。下面以二级考试为主，按DOS题、程序修改题和编程题三部分分别讲一下应重点注意的问题。
　　1．DOS命令部分由于条件限制，不可能考很多内容。根据历次考试经验，不外乎如下几条：
　　COPY (实际使用最多，也是最复杂的命令之一)
　　MD (=MKDIR) 和 RD (=RMDIR)
　　DEL (=ERASE)
　　REN (=RENAME)
　　ATTRIB (实际极少使用的命令之一)
　　2000年以后的考试中增加了一条常用命令 DIR (由于该命令没有任何信息保存到磁盘上，因此考试时要求与一不常用的重定向命令 &gt; 
一起使用。重定向命令 &gt; , &lt; , &gt;&gt; 与管道命令 | 均属不常用的高级 DOS 命令。)
　　估计以后的考试也可能略有变化，即逐渐增加使用命令的条数。由于该内容变化小，考生应当练习到纯熟的境地，在考试时用尽可能少的时间来做这部分内容，以使其他内容有更多的时间。六题能做出五题即可，有一题一时想不起，可以暂时先不做，做完其他题后如有时间可再回头做。这部分的时间不超过十分钟较好。
　　2．做程序修改题要特别注意严格按要求做。
　　程序行的错误标志为“***found***”。有的题目明确指出错误紧跟在“***found***”下面的一行，而有的没有明确指出来。应重点注意“***found***”下面的第一条语句（有时候一条语句可以占几行）。同时应注意有时候几条语句（类似于文学中的排比句）错误雷同，是作为一个错误来处理的。
　　改正错误语句时一定注意不可增减程序行。因为评分时机器死板地检查第X个“***found***”下面第N行（第X个错误语句应在的行）是否修改得和若干标准答案中的一个相同，相同则给分，否则不给分。行数不对，无论程序怎样正确，评分时一定算作错误来处理。
　　程序修改题中还应注意考虑原程序作者的思路，所作改动应尽量小。因为出题者给出的答案数是有限的，考生的答案如果出了出题者所给的范围，正确也被当作错误来处理了。
　　例（1999年上半年二级BASIC）：
　　'* 给定程序MODI1.BAS其功能是: 从键盘上每次输入两个100以下
　　'* 的正数分别赋给Y和Z(如不符合此条件的, 则重新输入)，累加到累
　　'* 加器X中,直到X的值超过500为止。请找出程序中的错误，将程序调
　　'* 试出所需结果。
　　'* 注意: 不得增行或删行, 也不得更改程序的结构!
　　X = 0
　　DO
　　DO
　　t = 0
　　INPUT "Y,Z="; Y, Z
　　IF 0 &lt; Y AND Y &lt; 100 AND 0 &lt; Z AND Z &lt; 100 THEN
　　t = 2
　　ELSE
　　PRINT "Out of Range! Input again"
　　END IF
　　'**********found**********
　　LOOP WHILE t &lt;&gt; 1
　　X = X + Y + Z
　　'**********found**********
　　'WHILE X &lt;&gt; 500
　　PRINT "X="; X
　　END
　　这里共有两个错误：第一个为条件错，第二个语句和条件均有错。因此第一个错误可只改动条件为 t&lt;&gt;2 或 t=0，整个语句为
　　loop while t&lt;&gt;2 或者 loop while t=0
　　第二个错误可改为
　　LOOP WHILE X &lt;= 500
　　总之，这里的思路就是用 DO ... LOOP WHILE &lt;条件&gt; 语句。
　　如果使用 do ... loop until &lt;条件&gt;，程序可以同样成立。比如第一个错误改为
　　loop until t=2
　　运行结果完全相同。
　　但是由于改动较多，超出了出题者当时的考虑范围，自动评分系统会认为您“修改错误！”扣掉您应得的15分！！！
　　做程序程序题部分的时间以不超过20分钟为好。
　　3．大部分考生最为头痛的恐怕要算编程题了，上机通不过的考生多半是栽在编程题上面的。由于编程题占40分之多，且评分时只看结果不管过程，所以大部分人不是得满40分就是得0分，而如果编程题得0分，上机通过的可能性就很小了。
　　对编程题只要在时间上留足，做题时不急不燥、认真审题，应该讲是问题不大的。当然，平常如能多做练习，有条件的多做实战演习，就更容易顺利通过了。我们考点有些考生在我这里做过很多的上机练习，实际考试时有不少人在半个小时内全部做完，最快的考生十多分钟即离开了机房（可不是不会做，而是全做对了）。
　　几种语言中，QB的编程题相对较为简单，多数时候相当于填空；Fortran语言思路也较简单，但要求熟悉常用算法（其他语言在算法上都有提示），如果不知道算法，想破脑袋也做不出来。这两种语言没有什么可说的。
　　Pascal和C难度接近，出题的方法与形式也接近。考生要注意的是在浏览整个程序时按子程序分别对待，如果想把程序的每一行都完全理解，完全是浪费时间。重点注意指定要编制的子程序中需使用和设置的变量，把它们的来龙去脉搞清楚就行了。至于输入输出子程序，则只要知道文件名、输入输出变量的情况就可以了。然后即可集中精力于编制子程序。注意在程序的编译、连接过程中可能有错误提示似乎指向不允许考生改动之处，这时千万不要被迷惑。只要把你的子程序编正确了，程序一定可以正确运行。
　　FoxBASE的编程题难度相差极大，如果运气不好，抽到一道难的，可能好半天还不能看清题意（运气好，抽到简单的题，三两下就可搞定）。这时千万不可轻言放弃，即使你完全编不出程序也不要紧，把题中要求的数据库结构正确建立起来也能够得不少于10分（多数时候可得20分之多）。考FoxBASE没有把握的考生不投一下这个机，就太划不来了。
　　补充：
　　4．怀疑题目有错要及时反映
　　最后要特别说明一点，等级考试由于多方面的原因，出题时可能有错误。虽然这个错误在整体上占的比例是很小的，但具体到考生个人，影响就太大了。2001下半年的四级题中，有一题因错把一个“最大”字写成了“最小”，导致相当多抽到此题的考生上机不过。因此如果怀疑题目有错，特别是编程题，一定要及时向监考人员反映。得到监考人员认可后，可考虑申请参加下一场考试（重新抽题，将不是该套题目）。
　　5．考试结束不要急于离开
　　为了切实保护考生利益，在每场考试结束后会立即评分（机评），并将得分为零分的考生名单予以公布。除非监考人员确定是考生完全不会做或故意得零分，多数考点会给得零分考生一次重考的机会。因此考试完毕（尤其是提前时间较多的考生），一定要耐心等待评分结果公布再离开。
　　1&nbsp; 