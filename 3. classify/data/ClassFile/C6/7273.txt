
　　现在，越来越多的大学生都在参加计算机考试。在各类计算机考试中，参加人数比较多的是计算机等级考试中的二级考试和软件水平考试。相对而言，二级考试比较容易通过，而软件水平考试难度则要大一些，也更具有挑战性和吸引力。
　　我在学校学的是机电一体化，平时对计算机比较感兴趣。通过两个半月的时间复习，我顺利通过了程序员级的考试，其中有一些经验和感受，在这里和大家交流。
　　选好复习用书
　　在复习应考时，大家要根据自己的具体情况，制定一套完整的复习计划。不要拘泥于某种特定的方法，某种方法对别人很合适，但不一定适合你。在参考书的使用上，我向大家推荐两本参考书，一本是清华大学出版社出版的《程序设计》，另一本是大连理工大学出版社出版的《全真试题精解》。
　　在看《程序设计》这本书时，不一定非要按顺序从第一页看到最后一页，可以从中间开始看，也可以跳着看。对于第二本书《全真试题精解》，建议大家把每道题都做一遍，不要漏掉任何一个细节。
　　另外，在参考书的使用上要灵活一点。拿自己来讲，在学校已经学过《C语言程序设计》，而且在这门课上花了很大的工夫，所以先略过了《程序设计》后面有关C语言程序部分，把节省出来的时间专攻数据结构、操作系统、编译原理、软件工程等不熟悉的内容。
　　掌握复习方法
　　理解数据结构中的树、二叉树、排序二叉树、单向链表、双向链表等内容，对于我们这些非计算机专业的学生来说是有一定难度的，而这些内容又是考试的重点，不但在上午的概念题要考到，在下午的程序设计考试中也是考试重点。我建议大家在复习这部分知识时，结合《习题集》中相关的编程题目来看。这样既巩固了概念，又加强了自己的编程能力。另外，有条件的话，大家最好找到《数据结构》这本书看一看，可以帮助你理解概念。
　　程序设计中的一些典型例题，最好上机调试一下，这比你拿本书看效果好多了。如果程序看不懂，可以在其前后加几条Printf语句，就可以看出这几条语句的结果。程序弄明白以后，大家还可以对程序进行测试和修改，检查一下结果是不是自己所要得到的。对于调试过程中的出错信息，一定不要放过，因为这些很有可能就是考点。
　　提高复习效率
　　因为大家平时上课都比较忙，复习的时间就显得比较宝贵，因此要学会提高效率。我有一个心得，就是在看书的时候，在这一页的空白处注一些眉批。几个字就够了，能勾起自己的记忆就可以。等以后回过头再看的时候，这几个字就可以起到提纲挈领的作用。看看这几个字，想想这一页的重点，这一页就可以翻过去了。这样能节省不少时间。
　　通过对这次考试的复习，我以前从报纸、杂志获得的零乱的计算机知识被一条“系统总线”连接了起来。可以说，这次复习不光帮助我通过了考试，更重要的是让我的计算机知识更加系统化，在编写程序的时候，看问题也更加全面深刻了。
　　注意考试技巧
　　程序员考试分为上午、下午两场。上午考基础知识，全部是选择题，一共75题，每空一分，满分75分。下午考程序设计，全部是填空题，一共25题，每空3分，满分也是75分。考试结束后，主考部门会划定分数线，只有上午、下午的成绩都通过分数线，才算是通过了考试。
　　下面我给大家举两个例子谈谈考试中的一些技巧。
　　1、注意英文缩写和全称的对应。2000年上午考题有一道关于互联网的七层参考模型是由谁制定的问题。其中涉及ISO、ITU、CCITT这几个缩写，如果平时大家注意到了这几个缩写所代表的英文全称，就不难回答了。
　　另外，2000年科技英语有这样一道考题，____markup language 
。选择项为1、supertext，2、hypertext……。很显然，如果知道超文本标志语言的缩写HTML，稍一联想，就知道答案是应该是2、hypertext，否则就可能掉进题目的“陷阱”。
　　2、软考有些内容是经常考到的。例如1994年下午第三题中有一个空：fig = (score ==100) ? 'A': (score &lt; 60) 
? _____________;
　　这道题目的意思是：如果score为100分的话，fig为“A”。如果score小于100分的话，则分为两种情况，一、score小于60分，fig为“E”，二、score大于60分，则以60分为界，以100分为第一区间，每隔10分为一区间，fig的等级分别为“B”、“C”、“D”、“E”。这里的score为一整形数，则（score-60）/10也为整形数。而在ASCⅡ中，“A”、“B”、“C”、“D”是顺序排列的。空格处应填“'E'：'A'+(score-60)/10”。
　　这个考点在程序设计考试中经常考到。对于这样的知识点，只要我们概念清楚，掌握牢固，就不难举一反三。
　　
（来源：百灵社区）　　